
set nocompatible                " choose no compatibility with legacy vi
syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation
set background=dark
set number
set relativenumber
set gfn=Consolas:h9
colorscheme lucius
LuciusDarkLowContrast

"" Clipboard
set clipboard=unnamed			" use system clipboard as default clipboard

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=4 shiftwidth=4      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" statusline
" format markers:
"   %t File name (tail) of file in the buffer
"   %m Modified flag, text is " [+]"; " [-]" if 'modifiable' is off.
"   %r Readonly flag, text is " [RO]".
"   %y Type of file in the buffer, e.g., " [vim]".
"   %= Separation point between left and right aligned items.
"   %l Line number.
"   %L Number of lines in buffer.
"   %c Column number.
"   %P percentage through buffer
set statusline=%t\ %m%r%y%=(ascii=\%03.3b,hex=\%02.2B)\ (%l/%L,%c)\ (%P)
set laststatus=2
" change highlighting based on mode
if version >= 700
  highlight statusLine cterm=bold ctermfg=black ctermbg=blue
  au InsertLeave * highlight StatusLine cterm=bold ctermfg=black ctermbg=blue
  au InsertEnter * highlight StatusLine cterm=bold ctermfg=black ctermbg=green
endif

" User remaps
let mapleader = ","
nmap <Leader>r :registers<CR>
nmap <Leader>b :ls<CR>
nmap <Leader>m :marks<CR>
nmap <Leader>C I//<ESC>					" comment line
nmap <Leader>c bi//<ESC>				" comment from word
nmap <Leader><Space> :/\s\+$<CR>		" look for trailing spaces
nmap <Leader>+ <C-w>>
nmap <Leader>- <C-w><
nmap <Leader>= <C-w>=
nmap <Leader>w <C-W><C-W>
nmap <Leader>l <C-W><C-W>               " ,w is not working on terminal vim. Let's try ,l
nmap <Leader>s :set scb!<CR>			" toggle scrollbind
nmap <Leader>d :call DiffToggle()<CR>
nmap <Leader>n :NERDTreeToggle<CR>

" Define a function called DiffToggle.
" The ! overwrites any existing definition by this name.
function! DiffToggle()
    " Test the setting 'diff', to see if it's on or off.
    " (Any :set option can be tested with &name.
    " See :help expr-option.)
    if &diff
        diffoff
    else
        diffthis
    endif
:endfunction
